# vim: filetype=bash

# evaluate glob pattern and join to create PATH sytax
# then we can add it to $PATH later
scripts_glob=(${HOME}/.scripts/*)
scripts_path=$(printf "%s:" "${scripts_glob[@]}")

# Last export is first/earliest in resultant $PATH
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                       # this loads nvm (and its $PATH?)
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"     # This loads nvm bash_completion
[ -f "$XDG_DATA_HOME/ghcup/env" ] && source "$XDG_DATA_HOME/ghcup/env" # haskell/ghcup-env
export PATH="$CARGO_HOME/bin:$PATH"
export PATH="$GOPATH/bin:$PATH"
export PATH="${scripts_path}${PATH}" # see above glob/joining
export PATH="$HOME/.local/bin:$PATH"
eval $(/opt/homebrew/bin/brew shellenv)

fpath+=("$(brew --prefix)/share/zsh/site-functions") # zsh completions installed via shell
fpath+=("~/.local/share/zsh/completion")             # zsh completions installed manually

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/tjex/.local/share/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/tjex/.local/share/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/Users/tjex/.local/share/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/tjex/.local/share/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/Users/tjex/.local/share/miniforge3/etc/profile.d/mamba.sh" ]; then
    . "/Users/tjex/.local/share/miniforge3/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<
